[{"C:\\Users\\admin\\Documents\\React-pet-Finder\\petfinder\\src\\index.js":"1","C:\\Users\\admin\\Documents\\React-pet-Finder\\petfinder\\src\\App.js":"2","C:\\Users\\admin\\Documents\\React-pet-Finder\\petfinder\\src\\reportWebVitals.js":"3","C:\\Users\\admin\\Documents\\React-pet-Finder\\petfinder\\src\\components\\ViewSigugun.js":"4","C:\\Users\\admin\\Documents\\React-pet-Finder\\petfinder\\src\\components\\ViewShelter.js":"5","C:\\Users\\admin\\Documents\\React-pet-Finder\\petfinder\\src\\components\\ViewSido.js":"6","C:\\Users\\admin\\Documents\\React-pet-Finder\\petfinder\\src\\components\\ViewCardPets.js":"7","C:\\Users\\admin\\Documents\\React-pet-Finder\\petfinder\\src\\components\\PetFinder.js":"8","C:\\Users\\admin\\Documents\\React-pet-Finder\\petfinder\\src\\components\\User\\Register.js":"9","C:\\Users\\admin\\Documents\\React-pet-Finder\\petfinder\\src\\components\\ApiService\\UserApiService.js":"10","C:\\Users\\admin\\Documents\\React-pet-Finder\\petfinder\\src\\components\\User\\LoginForm.js":"11","C:\\Users\\admin\\Documents\\React-pet-Finder\\petfinder\\src\\components\\User\\Logout.js":"12"},{"size":407,"mtime":1607664931146,"results":"13","hashOfConfig":"14"},{"size":3796,"mtime":1607665468905,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1606719937290,"results":"16","hashOfConfig":"14"},{"size":877,"mtime":1606728896761,"results":"17","hashOfConfig":"14"},{"size":784,"mtime":1606898925353,"results":"18","hashOfConfig":"14"},{"size":784,"mtime":1606728899841,"results":"19","hashOfConfig":"14"},{"size":1680,"mtime":1607396623673,"results":"20","hashOfConfig":"14"},{"size":8886,"mtime":1607906995317,"results":"21","hashOfConfig":"14"},{"size":5804,"mtime":1607588181117,"results":"22","hashOfConfig":"14"},{"size":464,"mtime":1607649421688,"results":"23","hashOfConfig":"14"},{"size":5825,"mtime":1607672920375,"results":"24","hashOfConfig":"14"},{"size":572,"mtime":1607665309397,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"15nbogr",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"C:\\Users\\admin\\Documents\\React-pet-Finder\\petfinder\\src\\index.js",[],["53","54"],"C:\\Users\\admin\\Documents\\React-pet-Finder\\petfinder\\src\\App.js",[],"C:\\Users\\admin\\Documents\\React-pet-Finder\\petfinder\\src\\reportWebVitals.js",[],"C:\\Users\\admin\\Documents\\React-pet-Finder\\petfinder\\src\\components\\ViewSigugun.js",[],["55","56"],"C:\\Users\\admin\\Documents\\React-pet-Finder\\petfinder\\src\\components\\ViewShelter.js",[],"C:\\Users\\admin\\Documents\\React-pet-Finder\\petfinder\\src\\components\\ViewSido.js",[],"C:\\Users\\admin\\Documents\\React-pet-Finder\\petfinder\\src\\components\\ViewCardPets.js",[],"C:\\Users\\admin\\Documents\\React-pet-Finder\\petfinder\\src\\components\\PetFinder.js",[],"C:\\Users\\admin\\Documents\\React-pet-Finder\\petfinder\\src\\components\\User\\Register.js",[],"C:\\Users\\admin\\Documents\\React-pet-Finder\\petfinder\\src\\components\\ApiService\\UserApiService.js",[],"C:\\Users\\admin\\Documents\\React-pet-Finder\\petfinder\\src\\components\\User\\LoginForm.js",["57"],"import React, { Component } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport './LoginForm.css';\r\nimport UserApiService from '../ApiService/UserApiService';\r\nlet emailRegExp = /^[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*.[a-zA-Z]{2,3}$/i;\r\nclass LoginForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        this.checkJWTToken();\r\n    }\r\n    checkJWTToken = () => {\r\n        let JWT = sessionStorage.getItem(\"Authorization\");\r\n        console.log(JWT);\r\n        if (JWT === null) {\r\n            return;\r\n        }\r\n        alert('이미로그인하셨습니다');\r\n        //홈경로로 보냄\r\n        this.props.history.push('/');\r\n\r\n    }\r\n    onChangeValues = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        });\r\n    }\r\n    login = () => {\r\n        let email = this.state.email;\r\n        let password = this.state.password;\r\n        if (email === \"\") {\r\n            alert('이메일을 입력해주세요');\r\n            return;\r\n        }\r\n        if (!emailRegExp.test(email)) {\r\n            alert('이메일 형식이 아닙니다');\r\n            return;\r\n        }\r\n        if (password === \"\") {\r\n            alert('비밀번호를 입력해주세요');\r\n            return;\r\n        }//유저객체생성\r\n        let User = {\r\n            username: this.state.email,\r\n            password: this.state.password,\r\n        }\r\n        UserApiService.login(User)\r\n            .then(res => {\r\n                console.log(\"데이터값:\", res.data);\r\n                let result = res.data.result;\r\n                console.log(\"result값:\", result);\r\n                if (result === 'fail') {\r\n                    alert('정보가 다릅니다.');\r\n                    return;\r\n                }\r\n                // 결과값으로 받은 JWT토근을 session에 저장함\r\n                sessionStorage.setItem(\"Authorization\", res.data.Authorization);\r\n                let JWT = sessionStorage.getItem(\"Authorization\");\r\n                // console.log(JWT);\r\n                //홈경로로 보냄\r\n                alert('로그인성공');\r\n                // window.location.assign('/');//redirect형식으로 보내버림\r\n                // this.props.history.push('/');\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            });\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <Container component=\"main\" maxWidth=\"xs\">\r\n                <CssBaseline />\r\n                <div className=\"paper\">\r\n                    <Typography component=\"h1\" variant=\"h5\">\r\n                        로그인\r\n                </Typography>\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        label=\"Email Address\"\r\n                        name=\"email\"\r\n                        autoFocus\r\n                        onChange={this.onChangeValues}\r\n                    />\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        name=\"password\"\r\n                        label=\"Password\"\r\n                        type=\"password\"\r\n                        onChange={this.onChangeValues}\r\n                    />\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className=\"submit\"\r\n                        children=\"로그인\"\r\n                        onClick={this.login}\r\n                    />\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className=\"submit\"\r\n                        children=\"구글로그인\"\r\n                    />\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className=\"submit\"\r\n                        children=\"페이스북 로그인\"\r\n                    />\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className=\"submit\"\r\n                        children=\"네이버 로그인\"\r\n                    />\r\n                    <Grid container>\r\n                        <Grid item xs>\r\n                            <Link href=\"#\" variant=\"body2\">\r\n                                Forgot password?(아직안됨)\r\n                        </Link>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Link href=\"/register\" variant=\"body2\">\r\n                                {\"Don't have an account? Sign Up\"}\r\n                            </Link>\r\n                        </Grid>\r\n                    </Grid>\r\n                </div>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LoginForm;\r\n","C:\\Users\\admin\\Documents\\React-pet-Finder\\petfinder\\src\\components\\User\\Logout.js",[],{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"58","replacedBy":"62"},{"ruleId":"60","replacedBy":"63"},{"ruleId":"64","severity":1,"message":"65","line":69,"column":21,"nodeType":"66","messageId":"67","endLine":69,"endColumn":24},"no-native-reassign",["68"],"no-negated-in-lhs",["69"],["68"],["69"],"no-unused-vars","'JWT' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]